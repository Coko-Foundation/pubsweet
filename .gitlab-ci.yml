variables:
  IMAGE_ORG: pubsweet
  IMAGE_NAME: pubsweet
  BASE_DOMAIN: gateway.ps.semioticsquares.com
  CONFIGURATION_REPOSITORY: https://gitlab.coko.foundation/pubsweet/deployment-config.git

stages:
  - build
  - test
  - review
  - staging
  - production
  - demo

build:
  image: docker:latest
  stage: build
  except:
    - tags
  script:
    - docker version
    - docker build -t $IMAGE_ORG/$IMAGE_NAME:$CI_COMMIT_SHA .
    - if [ -z "$DOCKERHUB_USERNAME" ] || [ -z "$DOCKERHUB_PASSWORD" ]; then echo "Not pushing" && exit 0; fi
    - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
    - echo "Ignore warning! Cannot perform an interactive login from a non TTY device"
    - docker push $IMAGE_ORG/$IMAGE_NAME:$CI_COMMIT_SHA

lint:style:
  image: $IMAGE_ORG/$IMAGE_NAME:$CI_COMMIT_SHA
  stage: test
  except:
    - tags
  variables:
    GIT_STRATEGY: none
  script:
    - cd ${HOME}
    - npm run lint:style

lint:js:
  image: $IMAGE_ORG/$IMAGE_NAME:$CI_COMMIT_SHA
  stage: test
  except:
    - tags
  variables:
    GIT_STRATEGY: none
  script:
    - cd ${HOME}
    - npm run lint:js

lint:json:
  image: $IMAGE_ORG/$IMAGE_NAME:$CI_COMMIT_SHA
  stage: test
  except:
    - tags
  variables:
    GIT_STRATEGY: none
  script:
    - cd ${HOME}
    - npm run lint:json
  
lint:commits:
   image: $IMAGE_ORG/$IMAGE_NAME:$CI_COMMIT_SHA
   stage: test
   except:
     - tags
   script:
     - cp -r .git ${HOME}/ && cd ${HOME}
     - yarn commitlint --from=origin/master --to=$CI_COMMIT_SHA

test:
  image: $IMAGE_ORG/$IMAGE_NAME:$CI_COMMIT_SHA
  stage: test
  variables:
    # don't clone repo as image already has it
    GIT_STRATEGY: none
    # setup data for postgres image
    POSTGRES_USER: test
    POSTGRES_PASSWORD: pw
    # connection details for tests
    PGUSER: test
    PGPASSWORD: pw
    NODE_ENV: test
  services:
    - postgres
  except:
    - tags
  script:
    - cd ${HOME}
    # specify host here else it confuses the linked postgres image
    - PGHOST=postgres npm run test

# if tests pass we will push latest, labelled with current commit hash
push:latest:
  image: docker:latest
  stage: staging
  script:
    - if [ -z "$DOCKERHUB_USERNAME" ] || [ -z "$DOCKERHUB_PASSWORD" ]; then echo "Not pushing" && exit 0; fi
    - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
    - echo "Ignore warning! Cannot perform an interactive login from a non TTY device"
    - docker build -t $IMAGE_ORG/$IMAGE_NAME:latest --label COMMIT_SHA=$CI_COMMIT_SHA .
    - docker push $IMAGE_ORG/$IMAGE_NAME:latest
  only:
    - master
  except:
    - tags

# -----------------------------------------------
# ui --------------------------------------------
# -----------------------------------------------

review:ui:
  image: pubsweet/deployer:latest
  stage: review
  variables:
    PACKAGE_NAME: ui
  environment:
    name: $PACKAGE_NAME/review/$CI_COMMIT_REF_NAME
    # !! kube-lego will fail if domain > 63 chars
    url: "http://${CI_ENVIRONMENT_SLUG}.${BASE_DOMAIN}"
    on_stop: stop_review:ui
  except:
    - master
    - tags
  script:
    - source deploy.sh
    - create_deployment

stop_review:ui:
  image: pubsweet/deployer:latest
  stage: review
  variables:
    PACKAGE_NAME: ui
    GIT_STRATEGY: none
  environment:
    name: $PACKAGE_NAME/review/$CI_COMMIT_REF_NAME
    action: stop
  when: manual
  except:
    - master
    - tags
  script:
    - source deploy.sh
    - delete_deployment

staging:ui:
  image: pubsweet/deployer:latest
  stage: staging
  variables:
    PACKAGE_NAME: ui
  environment:
    name: $PACKAGE_NAME/staging
    url: "https://${CI_ENVIRONMENT_SLUG}.${BASE_DOMAIN}"
  only:
    - master
  except:
    - tags
  script:
    - source deploy.sh
    - create_deployment

production:ui:
  image: pubsweet/deployer:latest
  stage: production
  variables:
    PACKAGE_NAME: ui
  environment:
    name: $PACKAGE_NAME/production
    url: "https://${CI_ENVIRONMENT_SLUG}.${BASE_DOMAIN}"
  when: manual
  only:
    - master
  except:
    - tags
  script:
    - source deploy.sh
    - create_deployment

demo:ui:
  image: pubsweet/deployer:latest
  stage: demo
  variables:
    PACKAGE_NAME: ui
  environment:
    name: $PACKAGE_NAME/demo
    url: "https://${CI_ENVIRONMENT_SLUG}.${BASE_DOMAIN}"
  when: manual
  except:
    - tags
  script:
    - source deploy.sh
    - create_deployment
