var api = require('../api/api')
var http = require('http')

function normalizePort (val) {
  var port = parseInt(val, 10)

  if (isNaN(port)) {
    // named pipe
    return val
  }

  if (port >= 0) {
    // port number
    return port
  }

  return false
}

// Get port from environment and store in Express.
var port = normalizePort(process.env.PORT || '3000')
api.set('port', port)

var server = http.createServer(api)
server.listen(port)
server.on('error', onError)
server.on('listening', onListening)

function onError (error) {
  throw error
}

function onListening () {
  var addr = server.address()
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port
  console.log('PubSweet is listening on ' + bind)
}

// We only run this workflow when not in Production && require a hot-loader
if (process.env.LOADER === 'hot') {
  // We require the bundle inside the if block because
  // it is only needed in a development environment.
  var webpackServer = require('./webpack_server')
  webpackServer()

  // Any request to localhost:3000 is proxied to webpack-dev-server
  api.all('/assets/*', function (req, res) {
    console.log('proxy')
    proxy.web(req, res, {
      target: 'http://localhost:3001'
    })
  })
}
