// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkbox Group is rendered correctly 1`] = `
.c1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-style: italic;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  -webkit-transition: all 2s;
  transition: all 2s;
}

.c1:not(:last-child) {
  margin-right: 0;
}

.c1 input {
  position: absolute;
  opacity: 0;
  z-index: -1;
}

.c1 span {
  margin-right: 0.25rem;
  font-size: 1.1em;
  -webkit-transition: color 0.5s;
  transition: color 0.5s;
}

.c1 span::before {
  content: ' ';
  display: inline-block;
  vertical-align: middle;
  width: 0.7em;
  height: 0.7em;
  margin-right: 0.5em;
  background: transparent;
  border: 3px solid white;
  box-shadow: 0 0 0 1px currentcolor;
  -webkit-transition: border 0.5s ease,background-size 0.3s ease;
  transition: border 0.5s ease,background-size 0.3s ease;
}

.c1:hover span::before {
  -webkit-animation: kLnLOV 0.5s;
  animation: kLnLOV 0.5s;
  box-shadow: 0 0 0 1px;
}

.c1 input:focus + span::before {
  box-shadow: 0 0 calc( * 2);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: left;
  -webkit-justify-content: left;
  -ms-flex-pack: left;
  justify-content: left;
}

<div
  className="c0"
>
  <label
    checked={false}
    className="c1"
  >
    <input
      checked={false}
      name={undefined}
      onChange={[Function]}
      required={undefined}
      type="checkbox"
      value="one"
    />
    <span>
      One
    </span>
  </label>
  <label
    checked={false}
    className="c1"
  >
    <input
      checked={false}
      name={undefined}
      onChange={[Function]}
      required={undefined}
      type="checkbox"
      value="two"
    />
    <span>
      Two
    </span>
  </label>
  <label
    checked={false}
    className="c1"
  >
    <input
      checked={false}
      name={undefined}
      onChange={[Function]}
      required={undefined}
      type="checkbox"
      value="three"
    />
    <span>
      Three
    </span>
  </label>
</div>
`;
